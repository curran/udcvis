// Generated by CoffeeScript 1.6.1
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['Component'](function(Component) {
    var Container;
    return Container = (function(_super) {

      __extends(Container, _super);

      function Container() {
        Container.__super__.constructor.apply(this, arguments);
        this.children = [];
      }

      Container.prototype.addChild = function(component, options) {
        var child,
          _this = this;
        child = {
          component: component,
          options: options,
          listener: function() {
            return _this.trigger('graphicsDirty');
          }
        };
        child.component.on('graphicsDirty', child.listener);
        this.children.push(child);
        return this.trigger('graphicsDirty');
      };

      Container.prototype.removeChild = function(component) {
        var child;
        child = _(this.children).findWhere({
          component: component
        });
        child.component.off('graphicsDirty', child.listener);
        this.children = _(this.children).without(child);
        return this.trigger('graphicsDirty');
      };

      return Container;

    })(Component);
  }));

}).call(this);
